# Makefile for uClibc
#
# Copyright (C) 2003 Paul Mundt <lethal@linux-sh.org>
# Copyright (C) 2000-2006 Erik Andersen <andersen@uclibc.org>
#
# Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.
#
subdirs += libpthread/bionic

CFLAGS-dir_bionic := -DNOT_IN_libc -DIS_IN_libpthread -I$(top_srcdir)$(PTDIR)/private -D_GNU_SOURCE -I$(top_srcdir)$(PTDIR)/arch-$(TARGET_ARCH)/bionic
CFLAGS-bionic := $(CFLAGS-dir_bionic) $(SSP_ALL_CFLAGS)

CFLAGS-libpthread/bionic/arch-$(TARGET_ARCH)/bionic/ := $(CFLAGS-bionic)

ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
LDFLAGS-libpthread.so := $(LDFLAGS_NOSTRIP) -Wl,-z,defs
else
LDFLAGS-libpthread.so := $(LDFLAGS)
endif

LIBS-libpthread.so := $(LIBS) $(ldso)

START_FILE-libpthread.so := $(SHARED_START_FILES)
END_FILE-libpthread.so := $(SHARED_END_FILES)

libpthread_FULL_NAME := libpthread-$(VERSION).so

libpthread_DIR := $(top_srcdir)libpthread/bionic
libpthread_OUT := $(top_builddir)libpthread/bionic

#-include $(libpthread_DIR)/sysdeps/$(TARGET_ARCH)/Makefile.arch

libpthread_SRC := semaphore.c ptrace.c __errno.c
#pthread-timers.c

#arch-x86/atomics_x86.c arch-x86/__get_tls.c arch-x86/__set_tls.c arch-x86/_exit_with_stack_teardown.S

libpthread_SPEC_SRC := pthread.c libc_pthread_init.c
libpthread_SPEC_SRC := $(patsubst %.c,$(libpthread_DIR)/%.c,$(libpthread_SPEC_SRC))

libpthread_SRC := $(patsubst %,$(libpthread_DIR)/%,$(libpthread_SRC))
libpthread_SRC += $(wildcard $(libpthread_DIR)/arch-$(TARGET_ARCH)/bionic/*.c $(libpthread_DIR)/arch-$(TARGET_ARCH)/bionic/*.S)

libpthread_OBJ := $(patsubst $(libpthread_DIR)/%.c,$(libpthread_OUT)/%.o,$(libpthread_SRC))
libpthread_OBJ := $(patsubst $(libpthread_DIR)/%.S,$(libpthread_OUT)/%.o,$(libpthread_OBJ))

#
# Stuff that goes into libc.so, not libpthread.so
#
#CFLAGS-OMIT-libc_pthread_init.c := $(CFLAGS-dir_bionic)
libpthread_libc_CSRC := forward.c
libpthread_libc_OBJ  := $(patsubst %.c, $(libpthread_OUT)/%.o,$(libpthread_libc_CSRC))
#libc-static-y += $(libpthread_OUT)/libc_pthread_init.o
libc-shared-y += $(libpthread_libc_OBJ:.o=.oS)

libpthread-static-y += $(patsubst $(libpthread_DIR)/%.c,$(libpthread_OUT)/%.o,$(libpthread_SPEC_SRC))
libpthread-shared-y += $(patsubst $(libpthread_DIR)/%.c,$(libpthread_OUT)/%.oS,$(libpthread_SPEC_SRC))

ifeq ($(DOPIC),y)
libpthread-a-y  += $(libpthread_OBJ:.o=.os) $(libpthread-static-y:.o=.os)
else
libpthread-a-y  += $(libpthread_OBJ) $(libpthread-static-y)
endif
libpthread-so-y += $(libpthread_OBJ:.o=.os) $(libpthread-shared-y)

lib-a-$(UCLIBC_HAS_THREADS) += $(top_builddir)lib/libpthread.a
lib-so-$(UCLIBC_HAS_THREADS) += $(top_builddir)lib/libpthread.so

#ifeq ($(DOMULTI),n)
$(top_builddir)lib/libpthread.so: $(libpthread_OUT)/libpthread_so.a $(libc.depend)
	$(call link.so,$(libpthread_FULL_NAME),$(MAJOR_VERSION))
#else
#$(top_builddir)lib/libpthread.so: $(libpthread_OUT)/libpthread.oS | $(libc.depend)
#	$(call linkm.so,$(libpthread_FULL_NAME),$(MAJOR_VERSION))
#endif

ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
$(libpthread_OUT)/libpthread_so.a: STRIP_FLAGS:=$(STRIP_FLAGS:-x=-X --strip-debug)
endif
$(libpthread_OUT)/libpthread_so.a: $(libpthread-so-y)
	$(Q)$(RM) $@
	$(do_ar)

ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
$(libpthread_OUT)/libpthread.oS: STRIP_FLAGS:=$(STRIP_FLAGS:-x=-X --strip-debug)
endif
$(libpthread_OUT)/libpthread.oS: $(libpthread_SRC) $(libpthread_SPEC_SRC)
	$(Q)$(RM) $@
	$(compile-m)

ifeq ($(PTHREADS_DEBUG_SUPPORT),y)
$(top_builddir)lib/libpthread.a: STRIP_FLAGS:=$(STRIP_FLAGS:-x=-X --strip-debug)
endif
$(top_builddir)lib/libpthread.a: $(libpthread-a-y)
	$(Q)$(INSTALL) -d $(dir $@)
	$(Q)$(RM) $@
	$(do_ar)

$(top_builddir)include/pthread.h:
	$(do_ln) $(call rel_srcdir)$(PTDIR)/sysdeps/pthread/$(@F) $@
$(top_builddir)include/semaphore.h:
	$(do_ln) $(call rel_srcdir)$(PTDIR)/$(@F) $@
$(top_builddir)include/bits/pthreadtypes.h: | $(top_builddir)include/bits
	$(do_ln) $(call rel_srcdir)$(PTDIR)/sysdeps/pthread/bits/$(@F) $@

linuxthreads_headers := $(top_builddir)include/pthread.h \
			$(top_builddir)include/semaphore.h \
			$(top_builddir)include/bits/pthreadtypes.h
$(linuxthreads_headers): $(wildcard $(addprefix $(top_builddir)include/config/linuxthreads/,old.h new.h))
headers-$(UCLIBC_HAS_THREADS) += $(linuxthreads_headers)

objclean-y += libpthread_clean
headers_clean-y += linuxthreads_headers_clean
linuxthreads_headers_clean:
	$(do_rm) $(linuxthreads_headers)

libpthread_clean:
	$(do_rm) $(addprefix $(libpthread_OUT)/*., o os oS a)
	$(do_rm) $(addprefix $(libpthread_OUT)/arch-$(TARGET_ARCH)/bionic/*., o os oS a)
